---

ansible_sudo_pass: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  66323536646461616430383436323736313532653037363330346537336431666432366361653438
  3332333437643932353834383338336363616635306362610a623032656162623466653239613437
  39393333333334613531333930336562323637643135303338363365653837643634366131646163
  6464396461366162300a383766366539633839393539346439653662313334363565333731353236
  32393961366339366233393731383165373039346638313661323864353130363835

crpg_reverse_proxy_service_name: crpg-reverse-proxy

crpg_api_user: crpg
crpg_api_service_name: crpg-web-api
crpg_api_path: "/home/{{ crpg_api_user }}/{{ crpg_api_service_name }}"
crpg_api_port: 8000
crpg_api_log_file: "/var/log/crpg/{{ crpg_api_service_name }}.log"

crpg_ui_path: "/var/www/{{ crpg_domain_name }}"

crpg_domain_name: c-rpg.eu

crpg_db_service_name: crpg-db
crpg_db: crpg
crpg_db_user: crpg
crpg_db_user_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  38303737393930623462303066366563363435616265376637656538383336373931333532326362
  3364653166383839383735346266336661613566373265650a613637626666656635653134623165
  38626562646536376361343732396539373764663132663262333566326339383239653065356138
  3434356465313665390a643036346635343562646136653063646166366264396664313530326334
  3163

datadog_db_user: dd-agent # Same username as Datadog agent so ident authentication can be used

nginx_version: 1.23.1
nginx_opentracing_version: 0.26.0
dotnet_version: 7.0
datadog_opentracing_version: 1.3.5

datadog_api_key: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  63336331303239353839636366306365663262326338343831616564396133386631616539386636
  6436303036373834386662363836623266336536376365330a653532333535666436353230623332
  34386236323063306233383730343034333632643532396532353962653335393863653139653336
  3730653536623865660a356565313035373337313030613966646164623736623937626464373966
  66663735636134326334333164343430616634623761326163316434306530363833626236633430
  6537393033613533636438646634643235666337383030336130

datadog_application_key: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  33323830303038316239393336613633303062613765303737343364663533393462396439353865
  6232646534353762356632656436653863383661643961620a366337396531313032636665646331
  65373062643737353431656238623264613239326364623939623566393631373035386364383363
  6330363838333033390a366637373134626562373132333938613630653036313738636531666337
  65346338633837646361386362393363336461383065346338353530623461643930326632326565
  3239616561353364363634616233333934633865633262393137

datadog_checks:
    nginx:
        init_config:
        instances:
            - nginx_status_url: http://localhost:81/nginx_status
        logs:
            - type: file
              path: /var/log/nginx/access.log
              service: "{{ crpg_reverse_proxy_service_name }}"
              source: nginx
            - type: file
              path: /var/log/nginx/error.log
              service: "{{ crpg_reverse_proxy_service_name }}"
              source: nginx
    postgres:
        init_config:
        instances:
            - host: localhost
              port: 5432
              dbname: "{{ crpg_db }}"
              username: "{{ datadog_db_user }}"
              dbm: true
              custom_queries:
                  - metric_prefix: crpg
                    query: SELECT
                        (SELECT COUNT(*) FROM users WHERE deleted_at IS NULL) AS users,
                        (SELECT COUNT(*) FROM users WHERE updated_at > now() - INTERVAL '1 month') AS active_users_30d,
                        (SELECT COUNT(*) FROM users WHERE updated_at > now() - INTERVAL '1 week') AS active_users_7d,
                        (SELECT COUNT(*) FROM users WHERE updated_at > now() - INTERVAL '1 day') AS active_users_1d,
                        (SELECT COUNT(*) FROM users WHERE updated_at > now() - INTERVAL '15 min') AS active_users_15min
                    columns:
                        - name: users.count
                          type: gauge
                        - name: users.active.30d.count
                          type: gauge
                        - name: users.active.7d.count
                          type: gauge
                        - name: users.active.1d.count
                          type: gauge
                        - name: users.active.15min.count
                          type: gauge
                  - metric_prefix: crpg.users.active.30d.gold
                    query: SELECT pctls[1] AS p25, pctls[2] as p50, pctls[3] AS p75, pctls[4] AS p99
                        FROM (
                            SELECT percentile_disc(ARRAY[0.25, 0.50, 0.75, 0.99]) WITHIN GROUP (ORDER BY gold) AS pctls
                            FROM users
                            WHERE NOW() - updated_at < '30 days'::INTERVAL
                        ) AS q;
                    columns:
                      - name: p25
                        type: gauge
                      - name: p50
                        type: gauge
                      - name: p75
                        type: gauge
                      - name: p99
                        type: gauge
                  - metric_prefix: crpg.characters.active.30d.level
                    query: SELECT pctls[1] AS p25, pctls[2] as p50, pctls[3] AS p75, pctls[4] AS p99
                        FROM (
                            SELECT
                            percentile_disc(ARRAY[0.25, 0.50, 0.75, 0.99]) WITHIN GROUP (ORDER BY level) AS pctls
                            FROM characters
                            WHERE NOW() - updated_at < '30 days'::INTERVAL
                        ) AS q;
                    columns:
                      - name: p25
                        type: gauge
                      - name: p50
                        type: gauge
                      - name: p75
                        type: gauge
                      - name: p99
                        type: gauge
                  - metric_prefix: crpg.characters.active
                    query: SELECT COUNT(*), class
                        FROM characters
                        WHERE NOW() - updated_at < '30 days'::INTERVAL
                        GROUP BY class;
                    columns:
                      - name: 30d.class
                        type: gauge
                      - name: class
                        type: tag
        logs:
            - type: file
              path: /var/log/postgresql/postgresql.csv
              service: "{{ crpg_db_service_name }}"
              source: postgresql
              log_processing_rules:
                  - type: multi_line
                    pattern: \d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])
                    name: new_log_start_with_date
    csharp:
        init_config:
        instances:
        logs:
            - type: file
              path: "{{ crpg_api_log_file }}"
              service: "{{ crpg_api_service_name }}"
              source: csharp
    http_check:
        init_config:
        instances:
            - name: cRPG Web API
              url: "http://localhost:{{ crpg_api_port }}/health"
              content_match: ^Healthy$
              service: "{{ crpg_api_service_name }}"
              min_collection_interval: 60
            - name: cRPG Launcher
              method: HEAD
              url: "https://{{ crpg_domain_name }}/cRPG.zip"
              allow_redirects: true
              min_collection_interval: 60
            - name: Steam Open-ID
              url: https://steamcommunity.com/openid
              service: steam
              min_collection_interval: 60
              tls_verify: false
              tls_ignore_warning: true
    tls:
        init_config:
        instances:
            - server: localhost

patreon_access_token: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  36366264323138663431363936303362646263663936323333376163383438303762303065653765
  3938616239303433613936393936333239363932633330350a643261323064663363313963383363
  32633139396235613831336235306564323933636363343363333661623266646439653866643839
  3835643132363533340a343335353761313763313238393262303333343032323463343433373738
  34623166613838373734383030343935343462613938363362363166363536313433636132343932
  3239613332323632376336373632323439626661333033666365

afdian_access_token: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  39343663386135383239343237633366373636376337643731376638306231376163626238643838
  3861323337343066623666373761643837313838313763340a333364353066303366643331626232
  32616234373235663231393462636664396263623361646564616431663961616465383035383734
  6665353666386261620a383036633833303030623837366330333938613265373563663639316639
  62623365356162663637343239306532623761326334636132613339323736323062666332623766
  6237373533363461343439303630356438376337343765386232

github_access_token: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  37396232626466353962303235373030326335363866303362643234616461663830646530363565
  3038346164373634623838313365313639376133313331390a663064393837323239326662393635
  63373237626336616634313132343231303161633131653461393366303762393737653139613234
  6166363334326462320a346637383135343666653636326439386138303536396562353232663439
  63356232643334373836376131656334626661383363376132626461663130376233343038326138
  32373966363261303935383465323834386131626138326235623363623661323430666238623730
  62376330336330653737353036346237306539623233333731363463313531336433623338373332
  63353162313034363131376130366565646565613533626631383337663834626331396235626131
  3263
