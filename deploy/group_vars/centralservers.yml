---

ansible_sudo_pass: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  32326165616133323332366631633136663436323037633536643730363333313234356538303437
  3036326266636130353664326263313165333036313034330a306537376130376636323062303863
  30666637363636626236393832333163653162666337343137326339666232663434626532343539
  3733376466396562650a633061383938306533316235366163356239356666656166396334663137
  3439

crpg_reverse_proxy_service_name: crpg-reverse-proxy

crpg_api_user: crpg
crpg_api_service_name: crpg-web-api
crpg_api_path: "/home/{{ crpg_api_user }}/{{ crpg_api_service_name }}"
crpg_api_port: 8000
crpg_api_log_file: "/var/log/crpg/{{ crpg_api_service_name }}.log"

crpg_ui_path: "/var/www/{{ crpg_domain_name }}"

crpg_domain_name: namidaka.fr

crpg_db_service_name: crpg-db
crpg_db: crpg
crpg_db_user: crpg
crpg_db_user_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  36666130613663333435323864656237653566383531326463383433343831363038303732656131
  3662643863663838396534643766616262626365346563650a623136393037343630313063653561
  31363665626230626535323437623461323037656631303564323864643265616461613963333263
  6338623462376663340a313138616563353562313738643862343533396563646431363639616563
  32666435623364313032643564306565646131346430336134613032393033336436

datadog_db_user: dd-agent # Same username as Datadog agent so ident authentication can be used

nginx_version: 1.23.1
nginx_opentracing_version: 0.26.0
dotnet_version: 7.0
datadog_opentracing_version: 1.3.5

datadog_api_key: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  61353865653665623739633563633933626564623130343662643336363134343166313135663863
  6565313738343862346631353435373432313062646330350a343836326233353239663739336331
  34393762366338333333343635316562633162653932663138306432376431643363323762633430
  6465316635666365610a336564363433646161363632646665363236383936636134613164323462
  6434

datadog_application_key: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  61353865653665623739633563633933626564623130343662643336363134343166313135663863
  6565313738343862346631353435373432313062646330350a343836326233353239663739336331
  34393762366338333333343635316562633162653932663138306432376431643363323762633430
  6465316635666365610a336564363433646161363632646665363236383936636134613164323462
  6434

datadog_checks:
    nginx:
        init_config:
        instances:
            - nginx_status_url: http://localhost:81/nginx_status
        logs:
            - type: file
              path: /var/log/nginx/access.log
              service: "{{ crpg_reverse_proxy_service_name }}"
              source: nginx
            - type: file
              path: /var/log/nginx/error.log
              service: "{{ crpg_reverse_proxy_service_name }}"
              source: nginx
    postgres:
        init_config:
        instances:
            - host: localhost
              port: 5432
              dbname: "{{ crpg_db }}"
              username: "{{ datadog_db_user }}"
              dbm: true
              custom_queries:
                  - metric_prefix: crpg
                    query: SELECT
                        (SELECT COUNT(*) FROM users WHERE deleted_at IS NULL) AS users,
                        (SELECT COUNT(*) FROM users WHERE updated_at > now() - INTERVAL '1 month') AS active_users_30d,
                        (SELECT COUNT(*) FROM users WHERE updated_at > now() - INTERVAL '1 week') AS active_users_7d,
                        (SELECT COUNT(*) FROM users WHERE updated_at > now() - INTERVAL '1 day') AS active_users_1d,
                        (SELECT COUNT(*) FROM users WHERE updated_at > now() - INTERVAL '15 min') AS active_users_15min
                    columns:
                        - name: users.count
                          type: gauge
                        - name: users.active.30d.count
                          type: gauge
                        - name: users.active.7d.count
                          type: gauge
                        - name: users.active.1d.count
                          type: gauge
                        - name: users.active.15min.count
                          type: gauge
                  - metric_prefix: crpg.users.active.30d.gold
                    query: SELECT pctls[1] AS p25, pctls[2] as p50, pctls[3] AS p75, pctls[4] AS p99
                        FROM (
                            SELECT percentile_disc(ARRAY[0.25, 0.50, 0.75, 0.99]) WITHIN GROUP (ORDER BY gold) AS pctls
                            FROM users
                            WHERE NOW() - updated_at < '30 days'::INTERVAL
                        ) AS q;
                    columns:
                      - name: p25
                        type: gauge
                      - name: p50
                        type: gauge
                      - name: p75
                        type: gauge
                      - name: p99
                        type: gauge
                  - metric_prefix: crpg.characters.active.30d.level
                    query: SELECT pctls[1] AS p25, pctls[2] as p50, pctls[3] AS p75, pctls[4] AS p99
                        FROM (
                            SELECT
                            percentile_disc(ARRAY[0.25, 0.50, 0.75, 0.99]) WITHIN GROUP (ORDER BY level) AS pctls
                            FROM characters
                            WHERE NOW() - updated_at < '30 days'::INTERVAL
                        ) AS q;
                    columns:
                      - name: p25
                        type: gauge
                      - name: p50
                        type: gauge
                      - name: p75
                        type: gauge
                      - name: p99
                        type: gauge
                  - metric_prefix: crpg.characters.active
                    query: SELECT COUNT(*), class
                        FROM characters
                        WHERE NOW() - updated_at < '30 days'::INTERVAL
                        GROUP BY class;
                    columns:
                      - name: 30d.class
                        type: gauge
                      - name: class
                        type: tag
        logs:
            - type: file
              path: /var/log/postgresql/postgresql.csv
              service: "{{ crpg_db_service_name }}"
              source: postgresql
              log_processing_rules:
                  - type: multi_line
                    pattern: \d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])
                    name: new_log_start_with_date
    csharp:
        init_config:
        instances:
        logs:
            - type: file
              path: "{{ crpg_api_log_file }}"
              service: "{{ crpg_api_service_name }}"
              source: csharp
    http_check:
        init_config:
        instances:
            - name: cRPG Web API
              url: "http://localhost:{{ crpg_api_port }}/health"
              content_match: ^Healthy$
              service: "{{ crpg_api_service_name }}"
              min_collection_interval: 60
            - name: Steam Open-ID
              url: https://steamcommunity.com/openid
              service: steam
              min_collection_interval: 60
              tls_verify: false
              tls_ignore_warning: true
    tls:
        init_config:
        instances:
            - server: localhost

patreon_access_token: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  61353865653665623739633563633933626564623130343662643336363134343166313135663863
  6565313738343862346631353435373432313062646330350a343836326233353239663739336331
  34393762366338333333343635316562633162653932663138306432376431643363323762633430
  6465316635666365610a336564363433646161363632646665363236383936636134613164323462
  6434

afdian_access_token: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  61353865653665623739633563633933626564623130343662643336363134343166313135663863
  6565313738343862346631353435373432313062646330350a343836326233353239663739336331
  34393762366338333333343635316562633162653932663138306432376431643363323762633430
  6465316635666365610a336564363433646161363632646665363236383936636134613164323462
  6434